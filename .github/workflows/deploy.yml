name: Deploy Pipeline

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pip dependencies
        run: |
          pip install -r pipeline/requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pip dependencies
        run: |
          pip install -r pipeline/requirements.txt
      - name: Run tests
        run: |
          pytest pipeline/*.py

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pip dependencies
        run: |
          pip install -r pipeline/requirements.txt
      - name: Run pylint
        run: |
          pylint --fail-under=8.0 $(git ls-files 'pipeline/*.py')

  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: ${{ secrets.SOURCE }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
  
  restart-service:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      - name: Restart Python service on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            echo "Installing new dependencies..."
            pip install -r /home/ec2-user/pipeline/requirements.txt
            echo "Killing existing script..."
            pkill -f pipeline.py || echo "No process killed."
            echo "Starting script..."
            nohup python3 /home/ec2-user/pipeline/pipeline.py -s > pipeline.log 2>&1 < /dev/null &
            echo "Script restarted."
            exit
          EOF
